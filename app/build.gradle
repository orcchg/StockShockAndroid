plugins {
    id("convention.kotlin-android-base-app")
    id("kotlin-kapt")
}

android {
    defaultConfig {
        applicationId = 'com.orcchg.yandexcontest'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                    "room.schemaLocation"  : "$projectDir/schemas".toString(),
                    "room.incremental"     : "true",
                    "room.expandProjection": "true"
                ]
            }
        }
    }
    dynamicFeatures = [
        ':feature:stock_details:stock_details_main'
    ]

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation(
        project(':androidUtil'),
        project(':base'),
        project(':design'),
        project(':core:context:impl'),
        project(':core:feature_flags:impl'),
        project(':core:network:impl'),
        project(':core:schedulers:impl'),
        project(':core:ui_core_lib'),
        project(':feature:main:ui'), // add :feature:main:ui to runtime classpath of :app
        project(':feature:search:impl'),
        project(':feature:stock_details:data:wiring'),
        project(':feature:stock_details:impl'),
        project(':feature:stock_list:data:wiring'),
        project(':feature:stock_list:impl'),
        project(':navigation'),
        project(':util')
    )
    implementation(
        libs.appCompat,
        libs.appStartup,
        libs.autoDispose,
        libs.autoDisposeAndroidAC,
        libs.constraintLayout,
        libs.coreKtx,
        libs.dagger,
        libs.glide,
        libs.moshi,
        libs.okHttpLog,
        libs.retrofit,
        libs.rx,
        libs.rxBinding,
        libs.rxBindingCore,
        libs.stetho,
        libs.timber
    )
    debugImplementation(
        libs.leakCanary
    )
    kapt(
        libs.daggerCompiler
    )
    testImplementation(
        testLibs.junit
    )
    androidTestImplementation(
        testLibs.espresso,
        testLibs.junit
    )

    lintChecks(
        project(':static_analysis:lint')
    )
}
