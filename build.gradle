import com.orcchg.yandexcontest.build.Dependencies

buildscript {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
        jcenter()
    }
    dependencies {
        classpath(
            Dependencies.AndroidX.navigationSafeArgs,
            Dependencies.Gradle.androidGradle,
//            Dependencies.Gradle.detekt,
            Dependencies.Gradle.javaBuildConfig,
            Dependencies.Gradle.ktGradle,
//            Dependencies.Gradle.ktLint,
//            Dependencies.Gradle.spotless,
//            Dependencies.Gradle.versions
        )
    }
}

plugins {
    id("convention.libraries")
    id "com.diffplug.spotless" version "5.12.1"
    id "com.github.ben-manes.versions" version "0.38.0"
    id "io.gitlab.arturbosch.detekt" version "1.16.0"
    id "org.jlleitschuh.gradle.ktlint" version "9.4.1"
    id('git-hooks-install')
}

apply from: "$rootDir/scripts/gradle/project_dependency_graph.gradle"
apply plugin: Dependencies.Plugin.versions

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    ext {
        androidVersionName = "1.1.0"
        androidVersionCode = 1

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        testApplicationId = 'com.orcchg.yandexcontest.test'
    }
}

subprojects { project ->
    apply from: "$rootProject.projectDir/scripts/gradle/detekt.gradle"
    apply from: "$rootProject.projectDir/scripts/gradle/ktlint.gradle"
    apply from: "$rootProject.projectDir/scripts/gradle/spotless.gradle"

    afterEvaluate { p ->
        if (p.hasProperty('android')) {
            android {
                defaultConfig {
                    versionCode rootProject.ext.androidVersionCode
                    versionName rootProject.ext.androidVersionName
                    testInstrumentationRunner rootProject.ext.testInstrumentationRunner

                    javaCompileOptions {
                        annotationProcessorOptions {
                            arguments += [
                                    "room.schemaLocation"  : "$projectDir/schemas".toString(),
                                    "room.incremental"     : "true",
                                    "room.expandProjection": "true"
                            ]
                        }
                    }
                }

                buildFeatures {
                    buildConfig true
                    viewBinding true
                }

                buildTypes {
                    release {
                        minifyEnabled false
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                }
            }
        }
    }
}
